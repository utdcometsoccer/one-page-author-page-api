namespace InkStainedWretch.OnePageAuthorAPI.Entities
{
    /// <summary>
    /// Represents a book and its associated metadata for the One Page Author API.
    /// </summary>
    public class Book
    {

        /// <summary>
        /// The primary key for the Book entity.
        /// </summary>
        public string id { get; set; }

        /// <summary>
        /// The unique identifier for the author, must match the format generated by Author.UniqueIdentifier().
        /// </summary>
        public string AuthorID { get; set; }

        /// <summary>
        /// The title of the book.
        /// </summary>
        public string Title { get; set; }

        /// <summary>
        /// The description of the book.
        /// </summary>
        public string Description { get; set; }

        /// <summary>
        /// The URL to the book's page or resource.
        /// </summary>
        public Uri URL { get; set; }

        /// <summary>
        /// The URI to the book's cover image.
        /// </summary>
        public Uri Cover { get; set; }

        /// <summary>
        /// Default constructor. Initializes all properties to default values.
        /// </summary>
        public Book()
        {
            id = string.Empty;
            AuthorID = string.Empty;
            Title = string.Empty;
            Description = string.Empty;
            URL = new Uri("https://example.com");
            Cover = new Uri("https://example.com/cover.jpg");
        }

        /// <summary>
        /// Constructor that initializes all properties and validates AuthorID format.
        /// </summary>
        /// <param name="authorID">The unique identifier for the author.</param>
        /// <param name="title">The title of the book.</param>
        /// <param name="description">The description of the book.</param>
        /// <param name="url">The URL to the book's page or resource.</param>
        /// <param name="cover">The URI to the book's cover image.</param>
        /// <exception cref="ArgumentException">Thrown if authorID does not match the required format.</exception>
        public Book(Guid authorID, string title, string description, Uri url, Uri cover)
        {
            id = Guid.NewGuid().ToString();
            AuthorID = authorID.ToString();
            Title = title;
            Description = description;
            URL = url;
            Cover = cover;
        }

    }
}
